import matplotlib.pyplot as plt

# # Data
# labels = ["MOP_MOV_V64_R_R",
#           "MOP_COMP_V128_R_I_R",
#           "MOP_MOV_V128_R_R",
#           "MOP_MOV_I_R",
#           "MOP_JMP__R_R",
#           "MOP_COMP_R_I_R",
#           "MOP_COMP_V128_R_R_R",
#           "MOP_COMP_R_R_R",
#           "MOP_SIMPLE",
#           "MOP_COMP_V64_R_R_R",
#           "MOP_MOV_R_R"]
# sizes = [117,
#          458,
#          172145484,
#          7223056,
#          281964473,
#          264323968,
#          522778511,
#          71938743,
#          1481773439,
#          74,
#          204690123]


labels2 = ["No_OpClass",
           "IntAlu",
           "IntMult",
           "IntDiv",
           "FloatAdd",
           "FloatCmp",
           "FloatCvt",
           "FloatMult",
           "FloatMultAcc",
           "FloatDiv",
           "FloatMisc",
           "FloatSqrt",
           "SimdAdd",
           "SimdAddAcc",
           "SimdAlu",
           "SimdCmp",
           "SimdCvt",
           "SimdMisc",
           "SimdMult",
           "SimdMultAcc",
           "SimdShift",
           "SimdShiftAcc",
           "SimdDiv",
           "SimdSqrt",
           "SimdFloatAdd",
           "SimdFloatAlu",
           "SimdFloatCmp",
           "SimdFloatCvt",
           "SimdFloatDiv",
           "SimdFloatMisc",
           "SimdFloatMult",
           "SimdFloatMultAcc",
           "SimdFloatSqrt",
           "SimdReduceAdd",
           "SimdReduceAlu",
           "SimdReduceCmp",
           "SimdFloatReduceAdd",
           "SimdFloatReduceCmp",
           "SimdAes",
           "SimdAesMix",
           "SimdSha1Hash",
           "SimdSha1Hash2",
           "SimdSha256Hash",
           "SimdSha256Hash2",
           "SimdShaSigma2",
           "SimdShaSigma3",
           "SimdPredAlu",
           "MemRead",
           "MemWrite",
           "FloatMemRead",
           "FloatMemWrite",
           "IprAccess",
           "InstPrefetch"
           ]
sizes2 = [
    233430952,
    167719938,
    384298,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    284135184,
    0,
    0,
    0,
    139737600,
    0,
    0,
    0,
    13107200,
    0,
    0,
    9193600,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    431826123,
    127453715,
    0,
    0,
    0,
    0,
    ]

size3 = [
    17236271,
    696255043,
    395408,
    2469936,
    93178354,
    0,
    32,
    0,
    0,
    0,
    0,
    0,
    699,
    0,
    120327166,
    0,
    427759,
    16179851,
    0,
    0,
    546,
    0,
    0,
    0,
    65477584,
    0,
    0,
    64145503,
    6553618,
    0,
    95751831,
    0,
    1639017,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    84065827,
    33382172,
    126132698,
    26546096,
    0,
    0

]

preresultTbd = zip(labels2, sizes2)
preresultTbd = sorted(preresultTbd, key= lambda x: x[1], reverse=True)
plt.pie([x[1] for x in preresultTbd ], labels = [x[0] for x in preresultTbd ], autopct='%1.1f%%')
plt.title("TBD instruction instruction issued to functional unit [blacksholes]")
plt.show()


preresultGem5 = zip(labels2, size3)
preresultGem5 = sorted(preresultGem5, key= lambda x: x[1], reverse=True)
plt.pie([x[1] for x in preresultGem5 ], labels = [x[0] for x in preresultGem5 ], autopct='%1.1f%%')
plt.title("gem instruction instruction issued to functional unit[blacksholes]")
plt.show()